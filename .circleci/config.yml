version: 2

refrences:

  cache-options: &cache-options
    key: package-cache-{{ checksum "package.json" }}

  images: &images
    docker:
      - image: circleci/node:8
      - image: redis:4
      - image: circleci/mysql:5

jobs:
  build:
    <<: *images
    steps:
      - checkout
      - restore_cache:
          <<: *cache-options
      - run:
          name: npm-install
          command: npm install
      - run:
          name: test-reporter-setup
          command: npm install mocha-junit-reporter --no-save
      - save_cache:
          <<: *cache-options
          paths:
            - ./node_modules

  test:
    <<: *images
    steps:
      - checkout
      - restore_cache:
          <<: *cache-options
      - run:
          name: linter
          command: ./node_modules/.bin/standard
      - run:
          name: test-reporter-setup
          command: mkdir ./junit
      - run:
          name: install mysql client
          command: sudo apt-get install mysql-client
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.0
      - run:
          name: wait for mysql
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: create database
          command: mysql -e 'CREATE DATABASE TEST_DB' -u root --host 127.0.0.1
      - run:
          name: test
          command: ./node_modules/.bin/mocha test --reporter mocha-junit-reporter
          environment:
            MOCHA_FILE: ./junit/mocha.xml
            NODE_ENV: test
      - store_test_results:
          path: ./junit
      - store_artifacts:
          path: ./junit

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
